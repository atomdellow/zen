<!DOCTYPE html>
<html lang="en">
  <head>
   <title>Input-Sanitizer</title>
   <!-- CSS only -->
   <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
   <!-- JavaScript Bundle with Popper -->
   <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
   </head>
   <body>
    <div class="container-fluid">
      <form class="form-test" name="form" id="form"  method="POST"><!-- action="/test-input" -->
        <label for="input1">InputTest</label>
        <input class="form-control" type="text" name="input1" id="input" placeholder="Some Text" onsubmit="validation();">
        <button class="btn btn-primary" type="submit" name="button" onclick="restoreDirt();">Receive</button>
        <button class="btn btn-primary" type="submit" name="button" onclick="validationClick();">Submit</button>
        <p id="required" style="color: 'red';"></p>
      </form>
    </div>
    <div class="message">
      <p id="demo"></p>
    </div>
    <canvas id="myCanvas" width="600" height="600">

    </canvas>
    <script type="text/javascript">

      var canvas = document.getElementById("myCanvas");
      var ctx = canvas.getContext("2d");
      var inputState;
      var sanitized = "&#x2F;&#x2F;Here &amp; is &lt;an&rt; &#x27;example&#x27; of dirt&period;";
      var inputVar = "input";
      function validationClick(){
        let match = document.getElementById(inputVar).value;
        var map = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&rt;',
        '"': '&quot;',
        "'": '&#x27;',
        "/": '&#x2F;',
        ".": "&period;"
        };
        const reg = /[&<>"'/.]/ig;
        document.getElementById(inputVar).value = document.getElementById(inputVar).value.replace(reg, (match)=>(map[match]));
        }
      function restoreDirt() {
        let match = document.getElementById(inputVar).value;
        const map = {
        '&amp;': '&',
        '&lt;': '<',
        '&rt;': '>',
        '&quot;': '"',
        "&#x27;": "'",
        "&#x2F;": '/',
        "&period;": "."
        };
        const reg1 = /\&amp;|\&lt;|\&rt;|\&quot;|\&period;|\&#x27;|\&#x2F;/ig;
        document.getElementById(inputVar).value = document.getElementById(inputVar).value.replace(reg1, (match)=>(map[match]));
      }


      var c = 0;
      var direction = 0;
      async function a(){

        let b = new Promise((resolve)=>{
          setTimeout(()=>{resolve(a())}, 100)
        });
        console.log("current direction: " + direction);
        if(direction=1){
          console.log("forward direction");
          if(c<=10){
            console.log("growing direction");
            ctx.fillStyle = "#FF0000";
            ctx.fillRect(0, 0, c, c);
            c++;
          }else{
            console.log("changed direction");
            direction=0;
            console.log(direction);
          };
        }else(direction=0){
          if(c>=0){
            console.log("fired opposite direction")
            ctx.fillStyle = "#FF0000";
            ctx.fillRect(0, 0, c, c);
            c--;
          }else{
            console.log("completed both directions: ");
            console.log(direction);
            direction=0;
          }
        }
      }
        //console.log(await b)
      }
      a()




      //converts special characters to coded text

      // function getKeys(){
      //   //converts character code events to a string
      //   var a = event.charCode;
      //   var b = String.fromCharCode(a);
      //   document.getElementById("id").value = sanitize(b);
      //   event.preventDefault();
      // }

    </script>
   </body>
</html>
